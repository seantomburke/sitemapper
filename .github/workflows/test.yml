# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test Suite

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Build Project
        run: npm run build --if-present
      - name: Cache Build Output
        uses: actions/cache/save@v4
        with:
          path: lib
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ github.sha }}

  type-check:
    name: TypeScript Type Check
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Restore Build Output
        uses: actions/cache/restore@v4
        with:
          path: lib
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Run TypeScript Type Check
        run: npm run test:ts

  eslint:
    name: ESLint
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint:eslint

  prettier:
    name: Prettier
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Prettier
        run: npm run lint:prettier

  spellcheck:
    name: Spellcheck
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Spellcheck
        run: npm run lint:spell

  test:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Restore Build Output
        uses: actions/cache/restore@v4
        with:
          path: lib
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Run Tests
        id: run_tests
        run: npm run test:js
        continue-on-error: true
      - name: Run Tests (retry)
        if: steps.run_tests.outcome == 'failure'
        run: npm run test:js
